// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20211215035741_AppUserEntityAdded")]
    partial class AppUserEntityAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.1");

            modelBuilder.Entity("API.Entities.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("datetime('now')");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("Role")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue("Member");

                    b.Property<DateTime>("UpdatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("datetime('now')");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Holmdel, NJ",
                            CreatedOn = new DateTime(2021, 12, 14, 22, 57, 41, 193, DateTimeKind.Local).AddTicks(2655),
                            Email = "admin@domain.com",
                            PasswordHash = new byte[] { 28, 253, 211, 79, 196, 54, 48, 162, 27, 234, 31, 99, 62, 52, 22, 167, 54, 251, 97, 235, 178, 34, 100, 184, 220, 178, 96, 33, 151, 255, 254, 219, 147, 216, 47, 176, 241, 71, 72, 17, 233, 2, 103, 245, 72, 101, 99, 115, 200, 159, 54, 9, 235, 202, 79, 5, 253, 58, 244, 5, 80, 13, 210, 42 },
                            PasswordSalt = new byte[] { 167, 187, 250, 92, 191, 60, 210, 137, 242, 59, 179, 39, 238, 166, 36, 38, 135, 122, 98, 117, 197, 185, 107, 241, 56, 136, 17, 53, 129, 151, 155, 171, 214, 135, 82, 172, 167, 201, 248, 179, 47, 205, 168, 83, 126, 14, 195, 220, 227, 159, 93, 65, 136, 131, 85, 51, 249, 129, 65, 145, 235, 224, 61, 90, 174, 122, 235, 74, 241, 194, 58, 209, 247, 59, 105, 237, 30, 60, 176, 47, 137, 234, 3, 202, 135, 138, 56, 19, 126, 122, 114, 159, 27, 241, 93, 57, 139, 246, 243, 116, 251, 116, 107, 146, 12, 0, 89, 17, 156, 56, 230, 35, 64, 250, 237, 13, 17, 64, 117, 106, 50, 207, 158, 127, 108, 87, 231, 177 },
                            Role = "Admin",
                            UpdatedOn = new DateTime(2021, 12, 14, 22, 57, 41, 193, DateTimeKind.Local).AddTicks(2658),
                            UserName = "admin"
                        },
                        new
                        {
                            Id = 2,
                            City = "Holmdel, NJ",
                            CreatedOn = new DateTime(2021, 12, 14, 22, 57, 41, 193, DateTimeKind.Local).AddTicks(2695),
                            Email = "member@domain.com",
                            PasswordHash = new byte[] { 83, 191, 38, 248, 227, 101, 232, 203, 38, 139, 48, 141, 80, 14, 34, 145, 147, 245, 167, 224, 31, 80, 90, 106, 185, 131, 172, 102, 1, 219, 36, 117, 42, 216, 246, 212, 230, 235, 149, 250, 26, 68, 51, 147, 76, 140, 78, 105, 110, 146, 10, 18, 203, 146, 31, 77, 191, 213, 65, 37, 203, 4, 36, 0 },
                            PasswordSalt = new byte[] { 168, 153, 126, 210, 162, 150, 111, 25, 96, 76, 185, 35, 175, 27, 2, 161, 17, 151, 254, 58, 131, 115, 34, 250, 190, 219, 189, 74, 122, 151, 157, 113, 241, 107, 241, 192, 151, 112, 110, 190, 72, 19, 188, 241, 60, 47, 190, 193, 243, 174, 84, 101, 157, 26, 96, 153, 245, 14, 84, 23, 222, 50, 20, 53, 71, 86, 15, 151, 141, 60, 106, 50, 250, 42, 131, 181, 61, 56, 196, 181, 80, 188, 61, 242, 57, 123, 220, 22, 52, 209, 224, 49, 201, 151, 111, 112, 106, 2, 131, 116, 153, 70, 85, 131, 39, 144, 9, 202, 7, 209, 244, 135, 203, 152, 46, 60, 158, 74, 120, 140, 3, 196, 100, 207, 92, 171, 55, 213 },
                            Role = "Member",
                            UpdatedOn = new DateTime(2021, 12, 14, 22, 57, 41, 193, DateTimeKind.Local).AddTicks(2697),
                            UserName = "member"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
